# 이 파일은 ROS 서비스(Service)의 요청(Request)과 응답(Response) 형식을 정의하는 파일임.
# 서비스를 사용하면 특정 작업을 요청하고, 그 결과(응답)를 받아올 수 있음.

# --- 요청(Request) 부분 ---
# 요청 부분은 클라이언트(요청하는 쪽)가 서버(요청을 처리하는 쪽)에게 어떤 정보를 보낼지 정의함.
Header head         # ROS 메시지 헤더임. 시간 정보나 프레임 ID 같은 표준 정보를 담고 있음.
                    # [보충 설명]: 로봇에서 데이터를 주고받을 때, 이 데이터가 언제 생성됐는지, 어떤 좌표계 기준인지 등을 알려주는 '신분증' 같은 거임.

int64 a             # 'a'라는 이름으로 '매우 큰 정수(int64)' 데이터를 요청할 거임.
                    # int64는 'Integer 64-bit'의 줄임말로, 양수와 음수를 포함해 약 900경까지의 정수를 표현 가능함.
                    # [보충 설명]: 64비트 정수라서 아주 큰 숫자를 다룰 때 유용함.

int64 b             # 'b'라는 이름으로 '매우 큰 정수(int64)' 데이터를 요청할 거임.
                    # 'a'와 마찬가지로 덧셈할 두 번째 숫자를 담을 거임.

string op           # 'op'라는 이름으로 '글자(문자열, string)' 데이터를 요청할 거임.
                    # 이 서비스가 어떤 '연산(operation)'을 수행할지 알려주는 용도임.
                    # 예를 들어, "add"와 같이 연산 종류를 전달할 수 있음.

---                 # 이 구분선 위쪽은 '요청' 데이터, 아래쪽은 '응답' 데이터를 정의한다는 약속임.

# --- 응답(Response) 부분 ---
# 응답 부분은 서버(요청을 처리하는 쪽)가 클라이언트(요청한 쪽)에게 어떤 결과를 보낼지 정의함.
bool success        # 'success'라는 이름으로 '참/거짓(bool)' 데이터를 응답할 거임.
                    # 서비스 요청이 성공적으로 처리됐는지(True) 아니면 실패했는지(False)를 알려줌.
                    # [보충 설명]: bool은 True 또는 False 둘 중 하나의 값만 가짐. 논리적인 결과를 나타낼 때 사용됨.

int64 result        # 'result'라는 이름으로 '매우 큰 정수(int64)' 데이터를 응답할 거임.
                    # 요청된 연산(예: 덧셈)의 결과값을 담아 보낼 거임.

string message      # 'message'라는 이름으로 '글자(문자열, string)' 데이터를 응답할 거임.
                    # 서비스 처리 결과에 대한 추가적인 설명이나 오류 메시지 등을 담아서 보낼 수 있음.
                    # [보충 설명]: 예를 들어, "덧셈 성공!" 또는 "잘못된 연산자입니다." 같은 메시지를 전달할 수 있음.

# Header: ROS의 표준 메시지 헤더임. 데이터의 타임스탬프(언제 생성됐는지)나 프레임 ID(어떤 좌표계 기준인지) 같은 기본적인 메타데이터를 담고 있음.
# int64: 64비트 정수형 데이터 타입임. int는 정수, 64는 비트 수를 의미하고, 음수와 양수 모두 표현 가능함. 아주 큰 숫자를 다룰 때 사용됨.
# string: 문자열(텍스트) 데이터 타입임.
# bool: 참(True) 또는 거짓(False)을 나타내는 불리언(Boolean) 데이터 타입임. 어떤 조건이 맞거나 틀릴 때 사용됨.
# ---: 서비스 파일에서 요청(Request) 정의 부분과 응답(Response) 정의 부분을 나누는 필수 구분선임. 이 선이 없으면 ROS가 이 파일을 제대로 인식 못함.

# AddTwoInts.srv 파일 분석: 로봇에게 '요청-응답' 약속하기 (서비스 정의)
# 이 파일은 로봇들끼리 어떤 작업을 요청하고, 그 작업의 결과를 어떻게 받을지 미리 정의해 놓은 "약속 문서"임.
# 마치 식당에서 음식을 주문하고(요청) 음식을 받는(응답) 거랑 같음.
# ROS에선 이런 약속 문서를 서비스(Service) 파일이라고 부름.
# 이 파일 하나로 요청(Request)과 응답(Response) 두 가지 정보를 동시에 정의함.